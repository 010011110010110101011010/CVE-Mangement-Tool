import subprocess
import requests

def is_internet_available():
    try:
        # Check if we can access Google's DNS server
        requests.get("https://8.8.8.8", timeout=5)
        return True
    except requests.ConnectionError:
        return False

def update_system():
    try:
        # Replace with the path to your test.py script
        subprocess.run(["/opt/homebrew/bin/python3.11", "/Users/o-z/Desktop/Cves_P/test.py"], check=True)
        print("The Update executed successfully.")
    except subprocess.CalledProcessError as e:
        print(f"An error occurred while running test.py: {e}")

def main():
    # Check if the PC is on and connected to the internet
    if is_internet_available():
        update_system()
    else:
        print("PC is not up or no internet connection available.")

if __name__ == "__main__":
    main()


# For Linux/macOS: Using cron
# Open the crontab file for editing:

# bash
# Copy code
# #crontab -e
# Add the following line to schedule your script:

# ruby
# Copy code

# #0 18 * * * /usr/bin/python3 /path/to/your/script.py

# 0 18 * * * means the script will run every day at 18:00 (6:00 PM).
# Replace /usr/bin/python3 with the path to your Python interpreter if different.
# Replace /path/to/your/script.py with the full path to your script.
# Save and exit the editor.

# For Windows: Using Task Scheduler
# Open Task Scheduler from the Start menu or search bar.

# Create a New Basic Task:

# Click on Create Basic Task on the right panel.
# Name your task and add a description if desired, then click Next.
# Set the Trigger:

# Select Daily and click Next.
# Set the start date and time to 18:00 (6:00 PM). Make sure to configure it to repeat every day, then click Next.
# Action:

# Choose Start a Program and click Next.
# In the Program/script field, enter the path to your Python executable (e.g., C:\Path\To\Python\python.exe).
# In the Add arguments (optional) field, enter the path to your script (e.g., C:\Path\To\Your\script.py).
# Finish:

# Review your settings and click Finish to create the task.
